{"version":3,"sources":["components/Todos/Todo/Todo.module.css","firebase.js","contexts/authContext.js","components/Toolbar/Toolbar.jsx","components/Todos/Todo/Todo.jsx","components/Todos/Todos.jsx","components/Forms/TaskInput/TaskInput.jsx","contexts/dbContext.js","containers/TodoEdit/TodoEdit.jsx","containers/TodoList/Todolist.jsx","containers/Auth/Signup/Signup.jsx","containers/Auth/Login/Login.jsx","containers/Auth/ForgotPassword/ForgotPassword.jsx","containers/Auth/Logout/Logout.jsx","containers/Layout/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","auth","database","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","Provider","useAuth","useContext","Toolbar","pathname","useLocation","authActionButtonUrl","authActionButtonText","authAction","to","Nav","Link","Button","variant","navBar","Navbar","Text","home","className","bg","Brand","href","Todo","done","id","name","onTaskChecked","onTaskDeleted","onTaskSelect","Card","Header","Form","Check","inline","type","custom","onChange","checked","label","Body","styles","crossedOut","join","Footer","size","onClick","Todos","tasks","onSelectTask","CardColumns","Object","keys","map","key","idx","event","_","defaultProps","TaskInput","props","style","margin","onSubmit","submit","Row","Col","Control","taskName","changed","placeholder","xs","disabled","DbContext","DbProvider","db","setDb","ref","uid","getAllAsync","a","get","res","val","createAsync","data","uuid","push","path","pieces_","length","updateAsync","console","log","child","update","removeAsync","remove","removeAllAsync","TodoEdit","selectedTodo","onExit","handleTaskUpdate","show","setShow","currentTodo","setCurrentTodo","handleEdit","target","inputValue","handleClose","save","Modal","centered","onHide","closeButton","Title","e","preventDefault","Group","controlId","Label","Todolist","setTasks","taskInputValue","setTaskInputValue","canAdd","setCanAdd","error","setError","infoRegister","setInfoRegister","selectedTask","setSelectedTask","editing","setEditing","then","fetchedTasks","catch","message","validate","input","addTodo","oldTasks","updateTodo","todo","onAddTaskClickHandler","onTaskDeleteHandler","updatedTasks","entries","filter","fromEntries","Container","Alert","dismissible","onClose","Heading","old","setTimeout","enqueueToDeletion","task","Error","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","current","maxWidth","Spinner","animation","role","required","Login","ForgotPassword","setMessage","Logout","handleSubmit","Layout","component","exact","TodoList","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dba4305.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"crossedOut\":\"Todo_crossedOut__vi4Rw\"};","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n})\n\nexport const auth = app.auth()\nexport const database = app.database()\nexport default app\n","import { createContext, useContext, useEffect, useState } from 'react'\nimport { auth } from '../firebase'\n\nconst AuthContext = createContext()\n\nexport function AuthProvider ({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    return auth.onAuthStateChanged((user) => {\n      setCurrentUser(user)\n      setLoading(false)\n    })\n  }, [])\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    resetPassword\n  }\n\n  function signup (email, password) {\n    return auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  function login (email, password) {\n    return auth.signInWithEmailAndPassword(email, password)\n  }\n\n  function logout () {\n    return auth.signOut()\n  }\n\n  function resetPassword (email) {\n    return auth.sendPasswordResetEmail(email)\n  }\n\n  return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n  )\n}\n\nexport function useAuth () {\n  return useContext(AuthContext)\n}\n","import { Button, Nav, Navbar } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useAuth } from '../../contexts/authContext'\nimport { useLocation } from 'react-router-dom'\n\nconst Toolbar = () => {\n  const { currentUser } = useAuth()\n  const { pathname } = useLocation()\n\n  const authActionButtonUrl = pathname === '/signup' ? '/login' : '/signup'\n  const authActionButtonText = pathname === '/signup' ? 'Log in' : 'Sign up'\n\n  const authAction = !currentUser\n    ? (\n      <LinkContainer to={authActionButtonUrl}>\n        <Nav.Link>\n          <Button variant=\"outline-primary\" >{authActionButtonText}</Button>\n        </Nav.Link>\n      </LinkContainer>\n      )\n    : (\n      <LinkContainer to=\"/logout\">\n        <Nav.Link>\n          <Button variant=\"outline-primary\">Log out</Button>\n        </Nav.Link>\n      </LinkContainer>\n      )\n\n  const navBar = (\n    <>\n      {currentUser && (\n        <LinkContainer to=\"/profile\">\n          <>\n            <Navbar.Text>Hello,</Navbar.Text>\n            <Nav.Link>{currentUser.email}</Nav.Link>\n          </>\n        </LinkContainer>\n      )}\n      {authAction}\n    </>\n  )\n\n  const home = (\n    pathname !== '/'\n      ? <LinkContainer to=\"/\">\n        <Nav.Link className=\"text-dark\">Home</Nav.Link>\n      </LinkContainer>\n      : <></>\n  )\n\n  return (\n    <Navbar className=\"mb-4\" bg=\"light\" variant=\"light\">\n      <LinkContainer to=\"/\">\n        <Navbar.Brand href=\"/\">Logo</Navbar.Brand>\n      </LinkContainer>\n      {home}\n      <Nav className=\"ml-auto flex align-items-center\">{navBar}</Nav>\n    </Navbar>\n  )\n}\n\nexport default Toolbar\n","import PropTypes from 'prop-types'\nimport { Button, Card, Form } from 'react-bootstrap'\n\nimport styles from './Todo.module.css'\n\nconst Todo = ({ done, id, name, onTaskChecked, onTaskDeleted, onTaskSelect }) => {\n  return (\n    <Card>\n      <Card.Header>\n        <Form.Check\n          inline\n          type=\"checkbox\"\n          custom\n          id={`taskDone${id}`}\n          onChange={onTaskChecked}\n          checked={done}\n          label=\"Done?\"\n        />\n      </Card.Header>\n      <Card.Body>\n        <span\n          className={\n            done ? [styles.crossedOut, 'text-muted'].join(' ') : null\n          }\n        >\n        {name}\n      </span>\n      </Card.Body>\n      <Card.Footer className=\"d-flex\">\n        <Button\n          size=\"sm\"\n          variant=\"info\"\n          onClick={() => onTaskSelect(id)}\n          className=\"flex-grow-1\"\n        >\n          Edit\n        </Button>\n        <Button\n          size=\"sm\"\n          className=\"ml-4 w-25\"\n          variant=\"danger\"\n          onClick={onTaskDeleted}\n        >\n          X\n        </Button>\n      </Card.Footer>\n    </Card>\n  )\n}\nTodo.propTypes = {\n  name: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n  onTaskChecked: PropTypes.func.isRequired,\n  onTaskDeleted: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired\n}\nexport default Todo\n","import { CardColumns } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo/Todo'\n\nconst Todos = ({ onTaskChecked, onTaskDeleted, tasks, onSelectTask }) => {\n  return (\n    <CardColumns>\n      {Object.keys(tasks).map((key, idx) => {\n        const { name, done } = tasks[key]\n        const id = key\n        return (\n          <Todo\n            key={idx}\n            name={name}\n            done={done}\n            id={id}\n            onTaskChecked={(event) => onTaskChecked(event, id)}\n            onTaskDeleted={(_) => onTaskDeleted(id)}\n            onTaskSelect={onSelectTask}\n          />\n        )\n      })}\n    </CardColumns>\n  )\n}\n\nTodos.propTypes = {\n  tasks: PropTypes.object.isRequired\n}\n\nTodos.defaultProps = {\n  tasks: []\n}\n\nexport default Todos\n","import { Form, Col, Row, Button } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\n\nconst TaskInput = (props) => {\n  return (\n    <Form style={{ margin: '3vh auto' }} onSubmit={props.submit}>\n      <Row>\n        <Col>\n          <Form.Control\n            value={props.taskName}\n            onChange={props.changed}\n            placeholder=\"Add your task here :)\"\n          />\n        </Col>\n        <Col xs=\"auto\">\n          <Button disabled={props.disabled} onClick={props.submit}>\n            Add\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nTaskInput.propTypes = {\n  taskName: PropTypes.string.isRequired,\n  changed: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired\n}\n\nexport default TaskInput\n","import { createContext, useContext, useEffect, useState } from 'react'\n\nimport { v1 as uuid } from 'uuid'\nimport { database } from '../firebase'\nimport { useAuth } from './authContext'\n\nconst DbContext = createContext(null)\n\nexport const DbProvider = ({ children }) => {\n  const [db, setDb] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const { currentUser } = useAuth()\n\n  useEffect(() => {\n    setLoading(true)\n    if (currentUser) {\n      setDb(database.ref(`/userData/${currentUser.uid}`))\n    }\n    setLoading(false)\n  }, [currentUser])\n\n  /**\n   * Get all tasks of user\n   * @async getAllAsync\n   * @param {number} limit - limit of tasks to get\n   * @param {string} last - id of last task // works as offset\n   * @returns User tasks or null\n   */\n  const getAllAsync = async (limit = 15, last = null) => {\n    // TODO: add offset and limit\n    if (!db) return null\n    const res = await db.get()\n    return res.val()\n  }\n\n  /**\n   * Upload a user task to db\n   * @param {Task} data - a task to upload\n   * @returns {string | null} returns task id\n   */\n  const createAsync = async (data) => {\n    if (!db) return uuid()\n    const res = await db.push(data)\n    return res.path.pieces_[res.path.pieces_.length - 1]\n  }\n  /**\n   *\n   * @param {string} key - task id\n   * @param {Todo} data - task data\n   */\n  const updateAsync = async (key, data) => {\n    if (!db) return\n    console.log(key, data)\n    await db.child(key).update(data)\n  }\n\n  /**\n   *\n   * @param {string} key - task id\n   */\n  const removeAsync = async (key) => {\n    if (!db) return\n    await db.child(key).remove()\n  }\n\n  const removeAllAsync = async () => {\n    if (!db) return true\n    await db.remove()\n  }\n\n  const value = {\n    getAllAsync,\n    createAsync,\n    updateAsync,\n    removeAsync,\n    removeAllAsync\n  }\n  return (\n    <DbContext.Provider value={value}>\n      {!loading && children}\n    </DbContext.Provider>\n  )\n}\n\nexport const useDb = () => useContext(DbContext)\n","import { Button, Form, Modal } from 'react-bootstrap'\nimport { useState } from 'react'\n\nconst TodoEdit = ({ selectedTodo, onExit, handleTaskUpdate }) => {\n  const [show, setShow] = useState(true)\n  const [currentTodo, setCurrentTodo] = useState({ ...selectedTodo } ?? { name: '', done: false })\n\n  const handleEdit = ({ target: { value: inputValue, name, checked } }) => {\n    const value = name === 'done' ? checked : inputValue\n    setCurrentTodo(currentTodo => ({ ...currentTodo, [name]: value }))\n  }\n\n  const handleClose = () => {\n    onExit()\n    setShow(false)\n  }\n\n  const save = () => {\n    handleTaskUpdate(currentTodo.id, currentTodo)\n    onExit()\n    setShow(false)\n  }\n\n  const submit = (e) => {\n    e.preventDefault()\n    save()\n  }\n\n  return (\n    <Modal centered show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Edit</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={submit}>\n          <Form.Group controlId=\"formName\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control name=\"name\" type=\"text\" placeholder=\"Your task name.\" value={currentTodo.name ?? ''}\n                          onChange={handleEdit}/>\n          </Form.Group>\n\n          <Form.Group controlId=\"formDoneCheckbox\">\n            <Form.Check name=\"done\" type=\"checkbox\" value={currentTodo.done ?? false} label=\"Done\"\n                        onChange={handleEdit}/>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={save}>\n          Save Changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default TodoEdit\n","import { Alert, Container } from 'react-bootstrap'\nimport Todos from '../../components/Todos/Todos'\nimport TaskInput from '../../components/Forms/TaskInput/TaskInput'\nimport { useEffect, useState } from 'react'\nimport { useDb } from '../../contexts/dbContext'\nimport { useAuth } from '../../contexts/authContext'\nimport { Link } from 'react-router-dom'\nimport TodoEdit from '../TodoEdit/TodoEdit'\n\nconst Todolist = () => {\n  const [tasks, setTasks] = useState({})\n  const [taskInputValue, setTaskInputValue] = useState('')\n  const [canAdd, setCanAdd] = useState(false)\n  const [error, setError] = useState(null)\n  const [infoRegister, setInfoRegister] = useState(true)\n  const [selectedTask, setSelectedTask] = useState(null)\n  const [editing, setEditing] = useState(false)\n  const { createAsync, removeAsync, updateAsync, getAllAsync } = useDb()\n  const { currentUser } = useAuth()\n\n  const onTaskInputHandler = ({ target }) => {\n    setTaskInputValue(target.value)\n    setCanAdd(validate(target.value))\n  }\n\n  useEffect(() => {\n    try {\n      getAllAsync().then(fetchedTasks => {\n        if (fetchedTasks) {\n          setTasks(fetchedTasks)\n        }\n      }).catch(() => {\n        setError('Could not retrieve data from server.')\n      })\n    } catch (e) {\n      setError(e.message)\n    }\n  }, [])\n\n  const validate = (input) => {\n    return input !== ''\n  }\n\n  const addTodo = (id, name) => {\n    setTasks((oldTasks) => ({\n      ...oldTasks,\n      [id]: { name: name, done: false, id: id }\n    }))\n  }\n\n  const updateTodo = (id, todo) => {\n    setTasks(oldTasks => ({ ...oldTasks, [id]: { ...todo } }))\n  }\n\n  const handleTaskUpdate = async (id, todo) => {\n    updateTodo(id, todo)\n    try {\n      await updateAsync(id, todo)\n    } catch (e) {\n      setError(e.message)\n    }\n  }\n\n  const onAddTaskClickHandler = async (event) => {\n    event.preventDefault()\n    try {\n      const id = await createAsync({ name: taskInputValue, done: false })\n      addTodo(id, taskInputValue)\n    } catch (e) {\n      setError(e.message)\n    }\n    setTaskInputValue('')\n    setCanAdd(false)\n  }\n\n  const enqueueToDeletion = (id) => {\n    setTimeout(() => {\n      if (tasks[id]) {\n        return onTaskDeleteHandler(id)\n      }\n    }, 1000)\n  }\n\n  const onTaskDeleteHandler = async (id) => {\n    setError(null)\n    try {\n      await removeAsync(id)\n    } catch (e) {\n      setError(e.message)\n    }\n    const updatedTasks = Object.entries(tasks).filter(([key, _]) => {\n      return key !== id\n    })\n    setTasks(Object.fromEntries(updatedTasks))\n  }\n\n  const onTaskDoneHandler = (e, id) => {\n    setTasks((old) => ({ ...old, [id]: { ...old[id], done: true } }))\n    enqueueToDeletion(id)\n  }\n\n  const handleTaskSelect = (id) => {\n    const task = tasks[id]\n    if (!task) {\n      throw new Error('Selected task does not exist')\n    }\n    setSelectedTask(task)\n    setEditing(true)\n  }\n\n  const handleCloseEditForm = () => {\n    setEditing(false)\n  }\n\n  return (\n    <Container className=\"flex justify-content-center mx-5\">\n      {!currentUser && infoRegister &&\n      <Alert dismissible onClose={() => setInfoRegister(false)} variant=\"info\"><Alert.Heading>Attention</Alert.Heading>If\n        you want to save your tasks, please <Link to=\"/signup\"><strong>sign in</strong></Link>.</Alert>}\n      <TaskInput\n        changed={onTaskInputHandler}\n        submit={onAddTaskClickHandler}\n        taskName={taskInputValue}\n        disabled={!canAdd}\n      />\n      {error &&\n      <Alert variant=\"danger\" onClose={() => setError()} dismissible><Alert.Heading>Error</Alert.Heading>{error}\n      </Alert>}\n      <Todos\n        tasks={tasks}\n        onTaskChecked={onTaskDoneHandler}\n        onTaskDeleted={onTaskDeleteHandler}\n        onSelectTask={handleTaskSelect}\n      />\n      {editing &&\n      <TodoEdit selectedTodo={selectedTask} handleTaskUpdate={handleTaskUpdate} onExit={handleCloseEditForm}/>}\n    </Container>\n  )\n}\n\nexport default Todolist\n","import { useRef, useState } from 'react'\nimport { Alert, Button, Card, Container, Form, Spinner } from 'react-bootstrap'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useAuth } from '../../../contexts/authContext'\n\nconst Signup = () => {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { signup, currentUser } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit (e) {\n    e.preventDefault()\n\n    // TODO: change placeholder validation\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match')\n    }\n\n    try {\n      setError('')\n      setLoading(true)\n      await signup(emailRef.current.value, passwordRef.current.value)\n    } catch (error) {\n      setError(error.message)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center mt-3\">\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Sign up</h2>\n            {loading && (\n              <div className=\"text-center mb-4\">\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              </div>\n            )}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  required\n                  ref={emailRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  required\n                  ref={passwordRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Form.Group id=\"password-confirm\">\n                <Form.Label>Password confirmation</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  required\n                  ref={passwordConfirmRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Sign up\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          Already have an account? <Link to=\"/login\">Log in</Link>\n        </div>\n      </div>\n      {!loading && currentUser && <Redirect to=\"/\" />}\n    </Container>\n  )\n}\n\nexport default Signup\n","import { useRef, useState } from 'react'\nimport { Alert, Button, Card, Container, Form, Spinner } from 'react-bootstrap'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useAuth } from '../../../contexts/authContext'\n\nconst Login = () => {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const { login, currentUser } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit (e) {\n    e.preventDefault()\n\n    try {\n      setError('')\n      setLoading(true)\n      await login(emailRef.current.value, passwordRef.current.value)\n    } catch (error) {\n      setError(error.message)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center mt-3\">\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Log in</h2>\n            {loading && (\n              <div className=\"text-center mb-4\">\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              </div>\n            )}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  required\n                  ref={emailRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  required\n                  ref={passwordRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Log in\n              </Button>\n            </Form>\n            <div className=\"w-100 text-center mt-3\">\n              <Link to=\"/forgot-password\">Forgot password?</Link>\n            </div>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          Need an account? <Link to=\"/signup\">Sign up</Link>\n        </div>\n      </div>\n      {!loading && currentUser && <Redirect to=\"/\" />}\n    </Container>\n  )\n}\n\nexport default Login\n","import { useRef, useState } from 'react'\nimport { Alert, Button, Card, Container, Form } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useAuth } from '../../../contexts/authContext'\n\nconst ForgotPassword = () => {\n  const emailRef = useRef()\n  const { resetPassword } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [message, setMessage] = useState('')\n\n  async function handleSubmit (e) {\n    e.preventDefault()\n\n    try {\n      setMessage('')\n      setError('')\n      setLoading(true)\n      await resetPassword(emailRef.current.value)\n      setMessage('Check your inbox for further instructions')\n    } catch {\n      setError('Failed to send password reset email.')\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center mt-3\">\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Password reset</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {message && <Alert variant=\"success\">{message}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" required ref={emailRef}/>\n              </Form.Group>\n\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Reset password\n              </Button>\n            </Form>\n            <div className=\"w-100 text-center mt-2\">\n              <Link to=\"/login\">Log in</Link>\n            </div>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          Need an account? <Link to=\"/signup\">Sign up</Link>\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default ForgotPassword\n","import { useState } from 'react'\nimport { useAuth } from '../../../contexts/authContext'\nimport { Redirect } from 'react-router-dom'\nimport { Alert, Button, Card, Container, Form, Spinner } from 'react-bootstrap'\n\nconst Logout = () => {\n  const { logout, currentUser } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      setError('')\n      setLoading(true)\n      await logout()\n    } catch {\n      setError('Failed to log out.')\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center mt-3\">\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Card>\n          <Card.Body>\n            <h3 className=\"text-center mb-4\">Press the button to log out. </h3>\n            {loading && (\n              <div className=\"text-center mb-4\">\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              </div>\n            )}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Log out\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n      {!loading && !currentUser && <Redirect to=\"/login\" />}\n    </Container>\n  )\n}\n\nexport default Logout\n","import { Switch, Route } from 'react-router-dom'\nimport Toolbar from '../../components/Toolbar/Toolbar'\nimport TodoList from '../TodoList/Todolist'\nimport Signup from '../Auth/Signup/Signup'\nimport { Container } from 'react-bootstrap'\nimport Login from '../Auth/Login/Login'\nimport ForgotPassword from '../Auth/ForgotPassword/ForgotPassword'\nimport Logout from '../Auth/Logout/Logout'\nconst Layout = () => {\n  return (\n    <>\n      <Toolbar />\n      <Container className=\"d-flex justify-content-center\">\n        <Switch>\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\n          <Route path=\"/\" exact component={TodoList} />\n        </Switch>\n      </Container>\n    </>\n  )\n}\n\nexport default Layout\n","import { HashRouter } from 'react-router-dom'\nimport Layout from './containers/Layout/Layout'\nimport { AuthProvider } from './contexts/authContext'\nimport { DbProvider } from './contexts/dbContext'\n\nfunction App () {\n  return (\n    <AuthProvider>\n      <DbProvider>\n        <HashRouter basename='/'>\n          <Layout />\n        </HashRouter>\n      </DbProvider>\n    </AuthProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}