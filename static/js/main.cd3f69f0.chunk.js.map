{"version":3,"sources":["components/Todos/Todo/Todo.module.css","components/UI/Toolbar/Toolbar.jsx","components/Todos/Todo/Todo.jsx","components/Todos/Todos.jsx","components/UI/Forms/TaskInput/TaskInput.jsx","containers/TodoList/Todolist.jsx","components/UI/Layout/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Toolbar","Navbar","bg","variant","Brand","href","Nav","className","Link","Todo","props","ListGroupItem","styles","Form","Check","inline","type","custom","id","onChange","onTaskChecked","checked","done","crossedOut","join","name","Button","size","DeleteButton","onClick","onTaskDeleted","Todos","ListGroup","Object","keys","tasks","map","key","idx","task","event","defaultProps","TaskInput","style","margin","onSubmit","submit","Row","Col","Control","value","taskName","changed","placeholder","xs","disabled","Todolist","state","taskInputValue","canAdd","onTaskInputHandler","target","setState","validate","input","onAddTaskClickHandler","preventDefault","updatedTasks","uuidv1","enqueueToDeletion","setTimeout","onTaskDeleteHandler","entries","filter","fromEntries","onTaskDoneHandler","Container","this","Component","Layout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd3f69f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"Todo_Todo__17XaG\",\"DeleteButton\":\"Todo_DeleteButton__3O6Sm\",\"crossedOut\":\"Todo_crossedOut__vi4Rw\"};","import { Nav, Navbar } from \"react-bootstrap\";\n\nconst Toolbar = () => {\n  return (\n    <Navbar bg=\"light\" variant=\"light\">\n      <Navbar.Brand href=\"#home\">Logo</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"#home\">TBA</Nav.Link>\n        <Nav.Link href=\"#features\">TBA</Nav.Link>\n        <Nav.Link href=\"#pricing\">TBA</Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default Toolbar;\n","import PropTypes from \"prop-types\";\nimport { Form } from \"react-bootstrap\";\nimport { ListGroupItem, Button } from \"react-bootstrap\";\nimport styles from \"./Todo.module.css\";\n\nconst Todo = (props) => {\n  return (\n    <ListGroupItem className={styles.Todo}>\n      <Form.Check\n        inline\n        type=\"checkbox\"\n        custom\n        id={`taskDone${props.id}`}\n        onChange={props.onTaskChecked}\n        checked={props.done}\n      />\n      <span\n        className={\n          props.done ? [styles.crossedOut, \"text-muted\"].join(\" \") : null\n        }\n      >\n        {props.name}\n      </span>\n      <Button\n        size=\"sm\"\n        className={styles.DeleteButton}\n        variant=\"outline-danger\"\n        onClick={props.onTaskDeleted}\n      >\n        X\n      </Button>\n    </ListGroupItem>\n  );\n};\nTodo.propTypes = {\n  name: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n  onTaskChecked: PropTypes.func.isRequired,\n  onTaskDeleted: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\nexport default Todo;\n","import { ListGroup } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport Todo from \"./Todo/Todo\";\n\nconst Todos = (props) => {\n  return (\n    <ListGroup variant=\"flush\">\n      {Object.keys(props.tasks).map((key, idx) => {\n        const task = props.tasks[key];\n        return (\n          <Todo\n            key={idx}\n            name={task.name}\n            done={task.done}\n            id={task.id}\n            onTaskChecked={(event) => props.onTaskChecked(event, task.id)}\n            onTaskDeleted={(event) => props.onTaskDeleted(task.id)}\n          />\n        );\n      })}\n    </ListGroup>\n  );\n};\n\nTodos.propTypes = {\n  tasks: PropTypes.object.isRequired,\n};\n\nTodos.defaultProps = {\n  tasks: [],\n};\n\nexport default Todos;\n","import { Form, Col, Row, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nconst TaskInput = (props) => {\n  return (\n    <Form style={{ margin: \"3vh auto\" }} onSubmit={props.submit}>\n      <Row>\n        <Col>\n          <Form.Control\n            value={props.taskName}\n            onChange={props.changed}\n            placeholder=\"Add your task here :)\"\n          />\n        </Col>\n        <Col xs=\"auto\">\n          <Button disabled={props.disabled} onClick={props.submit}>\n            Add\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nTaskInput.propTypes = {\n  taskName: PropTypes.string.isRequired,\n  changed: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n};\n\nexport default TaskInput;\n","import { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Todos from \"../../components/Todos/Todos\";\nimport TaskInput from \"../../components/UI/Forms/TaskInput/TaskInput\";\nimport { v1 as uuidv1 } from \"uuid\";\n\nexport default class Todolist extends Component {\n  state = {\n    tasks: {},\n    taskInputValue: \"\",\n    canAdd: false,\n  };\n\n  onTaskInputHandler = ({ target }) => {\n    this.setState({ taskInputValue: target.value });\n    this.setState({ canAdd: this.validate(target.value) });\n  };\n\n  validate = (input) => {\n    return input !== \"\";\n  };\n\n  onAddTaskClickHandler = (event) => {\n    event.preventDefault();\n    const updatedTasks = { ...this.state.tasks };\n    const id = uuidv1();\n    updatedTasks[id] = {\n      name: this.state.taskInputValue,\n      done: false,\n      id: id,\n    };\n    this.setState({\n      tasks: updatedTasks,\n      taskInputValue: \"\",\n      canAdd: false,\n    });\n  };\n\n  enqueueToDeletion = (id) => {\n    setTimeout(() => {\n      if (this.state.tasks[id] && this.state.tasks[id].done) {\n        this.onTaskDeleteHandler(id);\n      }\n    }, 3000);\n  };\n\n  onTaskDeleteHandler = (id, done) => {\n    const updatedTasks = Object.entries(this.state.tasks).filter(\n      ([key, val]) => {\n        return val.id !== id;\n      }\n    );\n    this.setState({ tasks: Object.fromEntries(updatedTasks) });\n  };\n\n  onTaskDoneHandler = ({ target }, id) => {\n    const tasks = { ...this.state.tasks };\n    tasks[id].done = !tasks[id].done;\n    this.setState({ tasks: tasks });\n    this.enqueueToDeletion(id);\n  };\n\n  render() {\n    return (\n      <Container style={{ margin: \"5vh auto\" }}>\n        <TaskInput\n          changed={this.onTaskInputHandler}\n          submit={this.onAddTaskClickHandler}\n          taskName={this.state.taskInputValue}\n          disabled={!this.state.canAdd}\n        />\n        <Todos\n          tasks={this.state.tasks}\n          onTaskChecked={this.onTaskDoneHandler}\n          onTaskDeleted={this.onTaskDeleteHandler}\n        />\n      </Container>\n    );\n  }\n}\n","import Toolbar from \"../Toolbar/Toolbar\";\nimport TodoList from \"../../../containers/TodoList/Todolist\";\n\nconst Layout = () => {\n  return (\n    <div>\n      <Toolbar />\n      <TodoList />\n    </div>\n  );\n};\n\nexport default Layout;\n","import Layout from \"./components/UI/Layout/Layout\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}