{"version":3,"sources":["components/Todos/Todo/Todo.module.css","firebase.js","contexts/authContext.js","components/Toolbar/Toolbar.jsx","components/Todos/Todo/Todo.jsx","components/Todos/Todos.jsx","components/Forms/TaskInput/TaskInput.jsx","contexts/dbContext.js","containers/TodoList/Todolist.jsx","containers/Auth/Signup/Signup.jsx","containers/Auth/Login/Login.jsx","containers/Auth/ForgotPassword/ForgotPassword.jsx","containers/Auth/Logout/Logout.jsx","containers/Layout/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","auth","database","AuthContext","createContext","AuthProvider","children","useState","currentUser","setcurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","Provider","useAuth","useContext","Toolbar","authAction","to","Nav","Link","Button","variant","navBar","Navbar","Text","bg","Brand","href","className","Todo","props","ListGroupItem","styles","Form","Check","inline","type","custom","id","onChange","onTaskChecked","checked","done","crossedOut","join","name","size","DeleteButton","onClick","onTaskDeleted","Todos","ListGroup","Object","keys","tasks","map","key","idx","event","defaultProps","TaskInput","style","margin","onSubmit","submit","Row","Col","Control","taskName","changed","placeholder","xs","disabled","DbContext","DbProvider","db","setDb","ref","uid","getAllAsync","a","get","res","val","createAsync","data","uuid","push","path","pieces_","length","updateAsync","child","update","removeAsync","remove","removeAllAsync","Todolist","setTasks","taskInputValue","setTaskInputValue","canAdd","setCanAdd","error","setError","infoRegister","setInfoRegister","then","fetchedTasks","catch","validate","input","onAddTaskClickHandler","preventDefault","oldTasks","onTaskDeleteHandler","updatedTasks","entries","filter","fromEntries","Container","Alert","dismissible","onClose","Heading","target","e","old","setTimeout","enqueueToDeletion","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","current","maxWidth","Card","Body","Spinner","animation","role","Group","Label","required","Login","ForgotPassword","message","setMessage","Logout","handleSubmit","Layout","component","exact","TodoList","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2857f4b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"Todo_Todo__17XaG\",\"DeleteButton\":\"Todo_DeleteButton__3O6Sm\",\"crossedOut\":\"Todo_crossedOut__vi4Rw\"};","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n})\n\nexport const auth = app.auth()\nexport const database = app.database()\nexport default app\n","import { createContext, useContext, useEffect, useState } from 'react'\nimport { auth } from '../firebase'\nconst AuthContext = createContext()\n\nexport function AuthProvider ({ children }) {\n  const [currentUser, setcurrentUser] = useState()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setcurrentUser(user)\n      setLoading(false)\n    })\n\n    return unsubscribe\n  }, [])\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    resetPassword\n  }\n\n  function signup (email, password) {\n    return auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  function login (email, password) {\n    return auth.signInWithEmailAndPassword(email, password)\n  }\n\n  function logout () {\n    return auth.signOut()\n  }\n\n  function resetPassword (email) {\n    return auth.sendPasswordResetEmail(email)\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuth () {\n  return useContext(AuthContext)\n}\n","import { Button, Nav, Navbar } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useAuth } from '../../contexts/authContext'\n\nconst Toolbar = () => {\n  const { currentUser } = useAuth()\n\n  const authAction = !currentUser\n    ? (\n    <LinkContainer to=\"/signup\">\n      <Nav.Link>\n        <Button variant=\"outline-primary\">Register</Button>\n      </Nav.Link>\n    </LinkContainer>\n      )\n    : (\n    <LinkContainer to=\"/logout\">\n      <Nav.Link>\n        <Button variant=\"outline-primary\">Logout</Button>\n      </Nav.Link>\n    </LinkContainer>\n      )\n  const navBar = (\n    <>\n      {currentUser && (\n        <LinkContainer to=\"/profile\">\n          <>\n            <Navbar.Text>Hello,</Navbar.Text>\n            <Nav.Link>{currentUser.email}</Nav.Link>\n          </>\n        </LinkContainer>\n      )}\n      {authAction}\n    </>\n  )\n  return (\n    <Navbar bg=\"light\" variant=\"light\">\n      <LinkContainer to=\"/\">\n        <Navbar.Brand href=\"/\">Logo</Navbar.Brand>\n      </LinkContainer>\n      <Nav className=\"ml-auto flex align-items-center\">{navBar}</Nav>\n    </Navbar>\n  )\n}\n\nexport default Toolbar\n","import PropTypes from 'prop-types'\nimport { Form, ListGroupItem, Button } from 'react-bootstrap'\n\nimport styles from './Todo.module.css'\n\nconst Todo = (props) => {\n  return (\n    <ListGroupItem className={styles.Todo}>\n      <Form.Check\n        inline\n        type=\"checkbox\"\n        custom\n        id={`taskDone${props.id}`}\n        onChange={props.onTaskChecked}\n        checked={props.done}\n      />\n      <span\n        className={\n          props.done ? [styles.crossedOut, 'text-muted'].join(' ') : null\n        }\n      >\n        {props.name}\n      </span>\n      <Button\n        size=\"sm\"\n        className={styles.DeleteButton}\n        variant=\"outline-danger\"\n        onClick={props.onTaskDeleted}\n      >\n        X\n      </Button>\n    </ListGroupItem>\n  )\n}\nTodo.propTypes = {\n  name: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n  onTaskChecked: PropTypes.func.isRequired,\n  onTaskDeleted: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired\n}\nexport default Todo\n","import { ListGroup } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo/Todo'\n\nconst Todos = (props) => {\n  return (\n    <ListGroup variant=\"flush\">\n      {Object.keys(props.tasks).map((key, idx) => {\n        const { name, done } = props.tasks[key]\n        const id = key\n        return (\n          <Todo\n            key={idx}\n            name={name}\n            done={done}\n            id={id}\n            onTaskChecked={(event) => props.onTaskChecked(event, id)}\n            onTaskDeleted={(event) => props.onTaskDeleted(id)}\n          />\n        )\n      })}\n    </ListGroup>\n  )\n}\n\nTodos.propTypes = {\n  tasks: PropTypes.object.isRequired\n}\n\nTodos.defaultProps = {\n  tasks: []\n}\n\nexport default Todos\n","import { Form, Col, Row, Button } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\n\nconst TaskInput = (props) => {\n  return (\n    <Form style={{ margin: '3vh auto' }} onSubmit={props.submit}>\n      <Row>\n        <Col>\n          <Form.Control\n            value={props.taskName}\n            onChange={props.changed}\n            placeholder=\"Add your task here :)\"\n          />\n        </Col>\n        <Col xs=\"auto\">\n          <Button disabled={props.disabled} onClick={props.submit}>\n            Add\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nTaskInput.propTypes = {\n  taskName: PropTypes.string.isRequired,\n  changed: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired\n}\n\nexport default TaskInput\n","import { useEffect, createContext, useContext, useState } from 'react'\n\nimport { v1 as uuid } from 'uuid'\nimport { database } from '../firebase'\nimport { useAuth } from './authContext'\n\nconst DbContext = createContext()\n\nexport const DbProvider = ({ children }) => {\n  const [db, setDb] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const { currentUser } = useAuth()\n\n  useEffect(() => {\n    setLoading(true)\n    if (currentUser) {\n      setDb(database.ref(`/userData/${currentUser.uid}`))\n    }\n    setLoading(false)\n  }, [currentUser])\n\n  /**\n   * Get all tasks of user\n   * @async getAllAsync\n   * @param {number} limit - limit of tasks to get\n   * @param {string} last - id of last task // works as offset\n   * @returns User tasks or null\n   */\n  const getAllAsync = async (limit = 15, last = null) => {\n    // TODO: add offset and limit\n    if (!db) return null\n    try {\n      const res = await db.get()\n      return res.val()\n    } catch {\n      return null\n    }\n  }\n\n  /**\n   * Upload a user task to db\n   * @param {Task} data - a task to upload\n   * @returns {string | null} returns task id\n   */\n  const createAsync = async (data) => {\n    if (!db) return uuid()\n    try {\n      const res = await db.push(data)\n      return res.path.pieces_[res.path.pieces_.length - 1]\n    } catch (e) {\n      return null\n    }\n  }\n  /**\n   *\n   * @param {string} key - task id\n   * @param {Todo} data - task data\n   */\n  const updateAsync = async (key, data) => {\n    if (!db) return true\n    try {\n      await db.child(key).update(data)\n    } catch {\n      return false\n    } return true\n  }\n\n  /**\n   *\n   * @param {string} key - task id\n   */\n  const removeAsync = async (key) => {\n    if (!db) return true\n    try {\n      await db.child(key).remove()\n    } catch {\n      return false\n    }\n    return true\n  }\n\n  const removeAllAsync = async () => {\n    if (!db) return true\n    try {\n      await db.remove()\n    } catch {\n      return false\n    }\n    return true\n  }\n\n  const value = {\n    getAllAsync,\n    createAsync,\n    updateAsync,\n    removeAsync,\n    removeAllAsync\n  }\n  return (\n    <DbContext.Provider value={value}>\n      {!loading && children}\n    </DbContext.Provider>\n  )\n}\n\nexport const useDb = () => useContext(DbContext)\n","import { Alert, Container } from 'react-bootstrap'\nimport Todos from '../../components/Todos/Todos'\nimport TaskInput from '../../components/Forms/TaskInput/TaskInput'\n// import { v1 as uuidv1 } from 'uuid'\nimport { useEffect, useState } from 'react'\nimport { useDb } from '../../contexts/dbContext'\nimport { useAuth } from '../../contexts/authContext'\nimport { Link } from 'react-router-dom'\n\nconst Todolist = (props) => {\n  const [tasks, setTasks] = useState({})\n  const [taskInputValue, setTaskInputValue] = useState('')\n  const [canAdd, setCanAdd] = useState(false)\n  const [error, setError] = useState(null)\n  const [infoRegister, setInfoRegister] = useState(true)\n  const { createAsync, removeAsync, getAllAsync } = useDb()\n  const { currentUser } = useAuth()\n  const onTaskInputHandler = ({ target }) => {\n    setTaskInputValue(target.value)\n    setCanAdd(validate(target.value))\n  }\n\n  useEffect(() => {\n    getAllAsync().then(fetchedTasks => {\n      if (fetchedTasks) { setTasks(fetchedTasks) }\n    }).catch(() => {\n      setError('Could not retrieve data from server.')\n    })\n  }, [])\n\n  const validate = (input) => {\n    return input !== ''\n  }\n\n  const onAddTaskClickHandler = async (event) => {\n    event.preventDefault()\n    const id = await createAsync({ name: taskInputValue, done: false })\n    if (!id) {\n      setError('Cannot create new task on the server.')\n      return\n    }\n    setTasks((oldTasks) => ({\n      ...oldTasks,\n      [id]: { name: taskInputValue, done: false }\n    }))\n    setTaskInputValue('')\n    setCanAdd(false)\n  }\n\n  const enqueueToDeletion = (id) => {\n    setTimeout(() => {\n      if (tasks[id]) {\n        onTaskDeleteHandler(id)\n      }\n    }, 300)\n  }\n\n  const onTaskDeleteHandler = async (id) => {\n    setError()\n    const removed = await removeAsync(id)\n    if (!removed) {\n      setError('Cannot remove task on the server.')\n      return\n    }\n    const updatedTasks = Object.entries(tasks).filter(([key, val]) => {\n      return key !== id\n    })\n    setTasks(Object.fromEntries(updatedTasks))\n  }\n\n  const onTaskDoneHandler = (e, id) => {\n    setTasks((old) => ({ ...old, [id]: { ...old[id], done: true } }))\n    enqueueToDeletion(id)\n  }\n\n  return (\n    <Container className=\"flex justify-content-center mx-5\">\n      {!currentUser && infoRegister && <Alert dismissible onClose={() => setInfoRegister(false)} variant=\"info\"><Alert.Heading>Attention</Alert.Heading>If you want to save your tasks, please <Link to=\"/signup\"><strong>sign in</strong></Link>.</Alert>}\n      <TaskInput\n        changed={onTaskInputHandler}\n        submit={onAddTaskClickHandler}\n        taskName={taskInputValue}\n        disabled={!canAdd}\n      />\n      {error && <Alert variant=\"danger\" onClose={() => setError()} dismissible><Alert.Heading>Error</Alert.Heading>{error}</Alert>}\n      <Todos\n        tasks={tasks}\n        onTaskChecked={onTaskDoneHandler}\n        onTaskDeleted={onTaskDeleteHandler}\n      />\n      {/* <button onClick={dupa}>CLick me</button> */}\n    </Container>\n  )\n}\n\nexport default Todolist\n","import { useRef, useState } from 'react'\nimport { Alert, Button, Card, Container, Form, Spinner } from 'react-bootstrap'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useAuth } from '../../../contexts/authContext'\n\nconst Signup = () => {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { signup, currentUser } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit (e) {\n    e.preventDefault()\n\n    // TODO: change placeholder validation\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match')\n    }\n\n    try {\n      setError('')\n      setLoading(true)\n      await signup(emailRef.current.value, passwordRef.current.value)\n    } catch {\n      setError('Failed to create an account.')\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center mt-3\">\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Sign up</h2>\n            {loading && (\n              <div className=\"text-center mb-4\">\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              </div>\n            )}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  required\n                  ref={emailRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  required\n                  ref={passwordRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Form.Group id=\"password-confirm\">\n                <Form.Label>Password confirmation</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  required\n                  ref={passwordConfirmRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Sign up\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          Already have an account? <Link to=\"/login\">Log in</Link>\n        </div>\n      </div>\n      {!loading && currentUser && <Redirect to=\"/\" />}\n    </Container>\n  )\n}\n\nexport default Signup\n","import { useRef, useState } from 'react'\nimport { Alert, Button, Card, Container, Form, Spinner } from 'react-bootstrap'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useAuth } from '../../../contexts/authContext'\n\nconst Login = () => {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const { login, currentUser } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit (e) {\n    e.preventDefault()\n\n    try {\n      setError('')\n      setLoading(true)\n      await login(emailRef.current.value, passwordRef.current.value)\n    } catch {\n      setError('Failed to sign in.')\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center mt-3\">\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Log in</h2>\n            {loading && (\n              <div className=\"text-center mb-4\">\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              </div>\n            )}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  required\n                  ref={emailRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  required\n                  ref={passwordRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Log in\n              </Button>\n            </Form>\n            <div className=\"w-100 text-center mt-3\">\n              <Link to=\"/forgot-password\">Forgot password?</Link>\n            </div>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          Need an account? <Link to=\"/signup\">Sign up</Link>\n        </div>\n      </div>\n      {!loading && currentUser && <Redirect to=\"/\" />}\n    </Container>\n  )\n}\n\nexport default Login\n","import { useRef, useState } from 'react'\nimport { Alert, Button, Card, Container, Form } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useAuth } from '../../../contexts/authContext'\n\nconst ForgotPassword = () => {\n  const emailRef = useRef()\n  const { resetPassword } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  async function handleSubmit (e) {\n    e.preventDefault()\n\n    try {\n      setMessage('')\n      setError('')\n      setLoading(true)\n      await resetPassword(emailRef.current.value)\n      setMessage('Check your inbox for further instructions')\n    } catch {\n      setError('Failed to send password reset email.')\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center mt-3\">\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Password reset</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {message && <Alert variant=\"success\">{message}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" required ref={emailRef} />\n              </Form.Group>\n\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Reset password\n              </Button>\n            </Form>\n            <div className=\"w-100 text-center mt-2\">\n              <Link to=\"/login\">Log in</Link>\n            </div>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          Need an account? <Link to=\"/signup\">Sign up</Link>\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default ForgotPassword\n","import { useState } from 'react'\nimport { useAuth } from '../../../contexts/authContext'\nimport { Redirect } from 'react-router-dom'\nimport { Alert, Button, Card, Container, Form, Spinner } from 'react-bootstrap'\n\nconst Logout = () => {\n  const { logout, currentUser } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      setError('')\n      setLoading(true)\n      await logout()\n    } catch {\n      setError('Failed to log out.')\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center mt-3\">\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Card>\n          <Card.Body>\n            <h3 className=\"text-center mb-4\">Press the button to log out. </h3>\n            {loading && (\n              <div className=\"text-center mb-4\">\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              </div>\n            )}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Log out\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n      {!loading && !currentUser && <Redirect to=\"/login\" />}\n    </Container>\n  )\n}\n\nexport default Logout\n","import { Switch, Route } from 'react-router-dom'\nimport Toolbar from '../../components/Toolbar/Toolbar'\nimport TodoList from '../TodoList/Todolist'\nimport Signup from '../Auth/Signup/Signup'\nimport { Container } from 'react-bootstrap'\nimport Login from '../Auth/Login/Login'\nimport ForgotPassword from '../Auth/ForgotPassword/ForgotPassword'\nimport Logout from '../Auth/Logout/Logout'\nconst Layout = () => {\n  return (\n    <>\n      <Toolbar />\n      <Container className=\"d-flex justify-content-center\">\n        <Switch>\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\n          <Route path=\"/\" exact component={TodoList} />\n        </Switch>\n      </Container>\n    </>\n  )\n}\n\nexport default Layout\n","import { BrowserRouter } from 'react-router-dom'\nimport Layout from './containers/Layout/Layout'\nimport { AuthProvider } from './contexts/authContext'\nimport { DbProvider } from './contexts/dbContext'\n\nfunction App () {\n  return (\n    <AuthProvider>\n      <DbProvider>\n        <BrowserRouter basename={process.env.REACT_APP_BASE_NAME}>\n          <Layout />\n        </BrowserRouter>\n      </DbProvider>\n    </AuthProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}