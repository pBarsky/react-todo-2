{"version":3,"sources":["components/Todos/Todo/Todo.module.css","firebase.ts","contexts/authContext.tsx","components/Toolbar/Toolbar.tsx","components/Todos/Todo/TodoCard.tsx","components/Todos/TodoCards.tsx","contexts/dbContext.tsx","components/Forms/TaskInput/TaskInput.tsx","containers/TodoEdit/TodoEdit.tsx","containers/TodoList/Todolist.tsx","containers/Auth/Signup/Signup.tsx","containers/Auth/Login/Login.tsx","containers/Auth/ForgotPassword/ForgotPassword.tsx","containers/Auth/Logout/Logout.tsx","containers/Layout/Layout.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["module","exports","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","auth","database","initialState","login","email","password","Promise","resolve","logout","undefined","resetPassword","actionCodeSettings","signup","currentUser","AuthContext","createContext","AuthProvider","children","useState","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","Provider","useAuth","useContext","Toolbar","pathname","useLocation","authActionButtonUrl","authActionButtonText","authAction","to","Nav","Link","Button","variant","navBar","Navbar","Text","home","className","bg","Brand","href","TodoCard","Todo","done","id","name","onTaskChecked","onTaskDeleted","onTaskSelect","Card","style","minWidth","Header","Form","Check","inline","type","custom","onChange","checked","label","Body","styles","crossedOut","join","Footer","size","onClick","display","justifyContent","alignItems","fontSize","TodoCards","tasks","onSelectTask","CardColumns","Object","keys","map","key","idx","task","event","createAsync","data","getAllAsync","removeAllAsync","removeAsync","updateAsync","DbContext","DbProvider","db","setDb","ref","uid","a","get","res","val","uuid","push","child","update","remove","useDb","TaskInput","addTodo","setError","canAdd","setCanAdd","taskInputValue","setTaskInputValue","onSubmitHandler","preventDefault","message","margin","onSubmit","InputGroup","Control","target","placeholder","OverlayTrigger","placement","defaultShow","overlay","Tooltip","triggerHandler","disabled","TodoEdit","selectedTodo","onExit","handleTaskUpdate","show","setShow","currentTodo","setCurrentTodo","handleEdit","inputValue","handleClose","save","then","Modal","centered","onHide","closeButton","Title","e","Group","controlId","Label","Todolist","setTasks","error","infoRegister","setInfoRegister","selectedTask","setSelectedTask","editing","setEditing","fetchedTasks","catch","updateTodo","todo","oldTasks","onTaskDeleteHandler","updatedTasks","entries","filter","fromEntries","Container","Alert","dismissible","onClose","Heading","old","setTimeout","enqueueToDeletion","Error","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","current","maxWidth","Spinner","animation","role","required","Login","ForgotPassword","setMessage","Logout","handleSubmit","Layout","path","component","exact","TodoList","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c258089.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"crossedOut\":\"Todo_crossedOut__vi4Rw\"};","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nexport const app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n})\n\nexport const auth = app.auth()\nexport const database = app.database()\n\nexport default firebase\n","import React, { createContext, useContext, useEffect, useState } from 'react'\nimport firebase, { auth } from '../firebase'\n\ninterface authContextState {\n  resetPassword: (email: string, actionCodeSettings?: (firebase.auth.ActionCodeSettings | null | undefined)) => Promise<void>;\n  currentUser: firebase.User | null;\n  logout: () => Promise<void>;\n  login: (email: string, password: string) => Promise<firebase.auth.UserCredential | null>;\n  signup: (email: string, password: string) => Promise<firebase.auth.UserCredential | null>\n}\n\nconst initialState: authContextState = {\n  login (email: string, password: string): Promise<firebase.auth.UserCredential | null> {\n    return Promise.resolve(null)\n  },\n  logout (): Promise<void> {\n    return Promise.resolve(undefined)\n  },\n  resetPassword (email: string, actionCodeSettings: firebase.auth.ActionCodeSettings | null | undefined): Promise<void> {\n    return Promise.resolve(undefined)\n  },\n  signup (email: string, password: string): Promise<firebase.auth.UserCredential | null> {\n    return Promise.resolve(null)\n  },\n  currentUser: null\n}\n\nconst AuthContext = createContext(initialState)\n\ninterface Props {\n  children: React.ReactElement\n}\n\nexport function AuthProvider ({ children }: Props) {\n  const [currentUser, setCurrentUser] = useState<firebase.User | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    return auth.onAuthStateChanged((user) => {\n      setCurrentUser(user)\n      setLoading(false)\n    })\n  }, [])\n\n  function signup (email: string, password: string): Promise<firebase.auth.UserCredential> {\n    return auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  function login (email: string, password: string): Promise<firebase.auth.UserCredential> {\n    return auth.signInWithEmailAndPassword(email, password)\n  }\n\n  function logout (): Promise<void> {\n    return auth.signOut()\n  }\n\n  function resetPassword (email: string, actionCodeSettings?: firebase.auth.ActionCodeSettings | null | undefined): Promise<void> {\n    return auth.sendPasswordResetEmail(email, actionCodeSettings)\n  }\n\n  const value: authContextState = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    resetPassword\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuth () {\n  return useContext(AuthContext)\n}\n","import { Button, Nav, Navbar } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useAuth } from '../../contexts/authContext'\nimport { useLocation } from 'react-router-dom'\n\nconst Toolbar = () => {\n  const { currentUser } = useAuth()\n  const { pathname } = useLocation()\n\n  const authActionButtonUrl = pathname === '/signup' ? '/login' : '/signup'\n  const authActionButtonText = pathname === '/signup' ? 'Log in' : 'Sign up'\n\n  const authAction = !currentUser\n    ? (\n      <LinkContainer to={authActionButtonUrl}>\n        <Nav.Link>\n          <Button variant=\"outline-primary\" >{authActionButtonText}</Button>\n        </Nav.Link>\n      </LinkContainer>\n      )\n    : (\n      <LinkContainer to=\"/logout\">\n        <Nav.Link>\n          <Button variant=\"outline-primary\">Log out</Button>\n        </Nav.Link>\n      </LinkContainer>\n      )\n\n  const navBar = (\n    <>\n      {currentUser && (\n        <LinkContainer to=\"/profile\">\n          <>\n            <Navbar.Text>Hello,</Navbar.Text>\n            <Nav.Link>{currentUser.email}</Nav.Link>\n          </>\n        </LinkContainer>\n      )}\n      {authAction}\n    </>\n  )\n\n  const home = (\n    pathname !== '/'\n      ? <LinkContainer to=\"/\">\n        <Nav.Link className=\"text-dark\">Home</Nav.Link>\n      </LinkContainer>\n      : <></>\n  )\n\n  return (\n    <Navbar className=\"mb-4\" bg=\"light\" variant=\"light\">\n      <LinkContainer to=\"/\">\n        <Navbar.Brand href=\"/\">Logo</Navbar.Brand>\n      </LinkContainer>\n      {home}\n      <Nav className=\"ml-auto flex align-items-center\">{navBar}</Nav>\n    </Navbar>\n  )\n}\n\nexport default Toolbar\n","import React from 'react'\nimport { Button, Card, Form } from 'react-bootstrap'\nimport styles from './Todo.module.css'\nimport { X } from 'react-bootstrap-icons'\nimport { Todo } from '../../../models/todo'\n\ninterface Props {\n  Todo: Todo;\n  onTaskChecked: (event: React.ChangeEvent<HTMLInputElement> | undefined) => void;\n  onTaskDeleted: (event: React.MouseEvent<HTMLElement> | undefined) => void\n  onTaskSelect: (id: string) => void\n}\n\nconst TodoCard = ({ Todo: { done, id, name }, onTaskChecked, onTaskDeleted, onTaskSelect }: Props) => {\n  return (\n    <Card style={{ minWidth: '170px' }}>\n      <Card.Header>\n        <Form.Check\n          inline\n          type=\"checkbox\"\n          custom\n          id={`taskDone${id}`}\n          onChange={onTaskChecked}\n          checked={done}\n          label=\"Done?\"\n        />\n      </Card.Header>\n      <Card.Body>\n        <span\n          className={\n            done ? [styles.crossedOut, 'text-muted'].join(' ') : undefined\n          }\n        >\n        {name}\n      </span>\n      </Card.Body>\n      <Card.Footer className=\"d-flex\">\n        <Button\n          size=\"sm\"\n          variant=\"info\"\n          onClick={() => onTaskSelect(id)}\n          className=\"flex-grow-1 mr-3\"\n        >\n          <strong>Edit</strong>\n        </Button>\n        <Button\n          size=\"sm\"\n          className=\"w-25\"\n          variant=\"danger\"\n          onClick={onTaskDeleted}\n          style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n        >\n          {<X style={{ fontSize: '2rem' }}/>}\n        </Button>\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default TodoCard\n","import { CardColumns } from 'react-bootstrap'\nimport TodoCard from './Todo/TodoCard'\nimport React from 'react'\nimport { Todo } from '../../models/todo'\n\ninterface Props {\n  tasks: Record<string, Todo>;\n  onTaskChecked: (event: React.ChangeEvent<HTMLInputElement> | undefined, id: string) => void;\n  onTaskDeleted: (id: string) => void;\n  onSelectTask: (id: string) => void;\n}\n\nconst TodoCards = ({ onTaskChecked, onTaskDeleted, tasks, onSelectTask }: Props) => {\n  return (\n    <CardColumns>\n      {Object.keys(tasks).map((key, idx) => {\n        const task = tasks[key]\n        return (\n          <TodoCard\n            key={idx}\n            Todo={task}\n            onTaskChecked={(event) => onTaskChecked(event, key)}\n            onTaskDeleted={() => onTaskDeleted(key)}\n            onTaskSelect={onSelectTask}\n          />\n        )\n      })}\n    </CardColumns>\n  )\n}\n\nexport default TodoCards\n","import React, { createContext, useContext, useEffect, useState } from 'react'\n\nimport { v1 as uuid } from 'uuid'\nimport firebase, { database } from '../firebase'\nimport { Todo } from '../models/todo'\nimport { useAuth } from './authContext'\n\ninterface dbContextState {\n  getAllAsync: () => Promise<Record<string, Todo> | null>;\n  createAsync: (data: Todo) => Promise<string>;\n  updateAsync: (key: string, data: Todo) => Promise<void>;\n  removeAsync: (key: string) => Promise<void>;\n  removeAllAsync: () => Promise<void>\n}\n\nconst initialState = {\n  createAsync (data: Todo): Promise<string> {\n    return Promise.resolve('')\n  },\n  getAllAsync (): Promise<Record<string, Todo> | null> {\n    return Promise.resolve(null)\n  },\n  removeAllAsync (): Promise<void> {\n    return Promise.resolve(undefined)\n  },\n  removeAsync (key: string): Promise<void> {\n    return Promise.resolve(undefined)\n  },\n  updateAsync (key: string, data: Todo): Promise<void> {\n    return Promise.resolve(undefined)\n  }\n}\n\nconst DbContext = createContext<dbContextState>(initialState)\n\ninterface Props {\n  children: React.ReactElement\n}\n\nexport const DbProvider = ({ children }: Props) => {\n  const [db, setDb] = useState<firebase.database.Reference | null>(null)\n  const [loading, setLoading] = useState(true)\n  const { currentUser } = useAuth()\n\n  useEffect(() => {\n    setLoading(true)\n    if (currentUser) {\n      setDb(database.ref(`/userData/${currentUser.uid}`))\n    }\n    setLoading(false)\n  }, [currentUser])\n\n  /**\n   * Get all tasks of user\n   * @async getAllAsync\n   * @returns User tasks or null\n   */\n  const getAllAsync = async (): Promise<Record<string, Todo> | null> => {\n    // TODO: add offset and limit\n    if (!db) return null\n    const res = await db.get()\n    return res.val() as Record<string, Todo>\n  }\n\n  /**\n   * Upload a user task to db\n   * @param {Task} data - a task to upload\n   * @returns {string} returns task id\n   */\n  const createAsync = async (data: Todo): Promise<string> => {\n    if (!db) return uuid()\n    const res = await db.push(data)\n    return res.key ?? uuid()\n    // return res.path.pieces_[res.path.pieces_.length - 1]\n  }\n  /**\n   *\n   * @param {string} key - task id\n   * @param {Todo} data - task data\n   */\n  const updateAsync = async (key: string, data: Todo): Promise<void> => {\n    if (!db) return\n    await db.child(key).update(data)\n  }\n\n  /**\n   *\n   * @param {string} key - task id\n   */\n  const removeAsync = async (key: string): Promise<void> => {\n    if (!db) return\n    await db.child(key).remove()\n  }\n\n  const removeAllAsync = async (): Promise<void> => {\n    if (!db) return\n    await db.remove()\n  }\n\n  const value: dbContextState = {\n    getAllAsync,\n    createAsync,\n    updateAsync,\n    removeAsync,\n    removeAllAsync\n  }\n\n  return (\n    <DbContext.Provider value={value}>\n      {!loading && children}\n    </DbContext.Provider>\n  )\n}\n\nexport const useDb = () => useContext(DbContext)\n","import { Button, Form, InputGroup, OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { useDb } from '../../../contexts/dbContext'\n\ninterface Props {\n  addTodo(id: string, taskInputValue: string): void,\n\n  setError(message: string): void,\n}\n\nconst TaskInput = ({ addTodo, setError }: Props) => {\n  const [canAdd, setCanAdd] = useState(false)\n  const [taskInputValue, setTaskInputValue] = useState('')\n  const { createAsync } = useDb()\n\n  const validate = (input: string) => {\n    return input !== ''\n  }\n\n  const onSubmitHandler = async (event: FormEvent<HTMLFormElement | HTMLElement>) => {\n    event.preventDefault()\n    try {\n      const id = await createAsync({ name: taskInputValue, done: false, id: '' })\n      addTodo(id, taskInputValue)\n    } catch (e) {\n      setError(e.message)\n    }\n    setTaskInputValue('')\n    setCanAdd(false)\n  }\n\n  const onTaskInputHandler = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setTaskInputValue(target.value)\n    setCanAdd(validate(target.value))\n  }\n\n  return (\n    <Form style={{ margin: '3vh auto' }} onSubmit={onSubmitHandler}>\n      <InputGroup>\n        <Form.Control\n          className=\"w-50\"\n          value={taskInputValue}\n          onChange={onTaskInputHandler}\n          placeholder=\"Add your task here :)\"\n        />\n        <OverlayTrigger placement=\"bottom\" defaultShow={true}\n                        overlay={<Tooltip id=\"dateInputTooltip\">Currently disabled</Tooltip>}>\n          {({ ref, ...triggerHandler }) => (<Form.Control\n            {...triggerHandler}\n            ref={ref}\n            type=\"date\"\n            className=\"rounded-right\"\n            disabled\n          />)}\n        </OverlayTrigger>\n        <Button className=\"ml-4\" disabled={!canAdd} onClick={onSubmitHandler}>\n          Add\n        </Button>\n      </InputGroup>\n    </Form>\n  )\n}\n\nexport default TaskInput\n","import { Button, Form, Modal } from 'react-bootstrap'\nimport React, { useState } from 'react'\nimport { Todo } from '../../models/todo'\n\ninterface Props {\n  selectedTodo: Todo;\n  onExit: () => void;\n  handleTaskUpdate: (id: string, todo: Todo) => Promise<void>\n}\n\nconst TodoEdit = ({ selectedTodo, onExit, handleTaskUpdate }: Props) => {\n  const [show, setShow] = useState(true)\n  const [currentTodo, setCurrentTodo] = useState<Todo>({ ...selectedTodo })\n\n  const handleEdit = ({ target: { value: inputValue, name, checked } }: any) => {\n    const value = name === 'done' ? checked : inputValue\n    setCurrentTodo(currentTodo => ({ ...currentTodo, [name]: value }))\n  }\n\n  const handleClose = () => {\n    onExit()\n    setShow(false)\n  }\n\n  const save = () => {\n    handleTaskUpdate(currentTodo.id, currentTodo).then()\n    onExit()\n    setShow(false)\n  }\n\n  const submit = (e: React.FormEvent) => {\n    e.preventDefault()\n    save()\n  }\n\n  return (\n    <Modal centered show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Edit</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={submit}>\n          <Form.Group controlId=\"formName\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control name=\"name\" type=\"text\" placeholder=\"Your task name.\" value={currentTodo.name ?? ''}\n                          onChange={handleEdit}/>\n          </Form.Group>\n\n          <Form.Group controlId=\"formDoneCheckbox\">\n            <Form.Check name=\"done\" type=\"checkbox\" checked={currentTodo.done ?? false} label=\"Done\"\n                        onChange={handleEdit}/>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={save}>\n          Save Changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default TodoEdit\n","import { Alert, Container } from 'react-bootstrap'\nimport TodoCards from '../../components/Todos/TodoCards'\nimport TaskInput from '../../components/Forms/TaskInput/TaskInput'\nimport React, { useEffect, useState } from 'react'\nimport { useDb } from '../../contexts/dbContext'\nimport { useAuth } from '../../contexts/authContext'\nimport { Link } from 'react-router-dom'\nimport TodoEdit from '../TodoEdit/TodoEdit'\nimport { Todo } from '../../models/todo'\n\nconst Todolist = () => {\n  const [tasks, setTasks] = useState<Record<string, Todo>>({})\n  const [error, setError] = useState<string>('')\n  const [infoRegister, setInfoRegister] = useState(true)\n  const [selectedTask, setSelectedTask] = useState<Todo | null>(null)\n  const [editing, setEditing] = useState(false)\n  const { removeAsync, updateAsync, getAllAsync } = useDb()\n  const { currentUser } = useAuth()\n\n  useEffect(() => {\n    try {\n      getAllAsync().then(fetchedTasks => {\n        if (fetchedTasks) {\n          setTasks(fetchedTasks)\n        }\n      }).catch(() => {\n        setError('Could not retrieve data from server.')\n      })\n    } catch (e) {\n      setError(e.message)\n    }\n  }, [])\n\n  const addTodo = (id: string, name: string) => {\n    setTasks((oldTasks) => ({\n      ...oldTasks,\n      [id]: { name: name, done: false, id: id }\n    }))\n  }\n\n  const updateTodo = (id: string, todo: Todo) => {\n    setTasks(oldTasks => ({ ...oldTasks, [id]: { ...todo } }))\n  }\n\n  const handleTaskUpdate = async (id: string, todo: Todo) => {\n    updateTodo(id, todo)\n    try {\n      await updateAsync(id, todo)\n    } catch (e) {\n      setError(e.message)\n    }\n  }\n\n  const onTaskDeleteHandler = async (id: string) => {\n    setError('')\n    try {\n      await removeAsync(id)\n    } catch (e) {\n      setError(e.message)\n    }\n    const updatedTasks = Object.entries(tasks).filter(([key, _]) => {\n      return key !== id\n    })\n    setTasks(Object.fromEntries(updatedTasks))\n  }\n\n  const enqueueToDeletion = (id: string) => {\n    setTimeout(() => {\n      if (tasks[id]) {\n        return onTaskDeleteHandler(id)\n      }\n    }, 1000)\n  }\n\n  const onTaskDoneHandler = (e: React.ChangeEvent<HTMLInputElement> | undefined, id: string) => {\n    setTasks((old) => ({ ...old, [id]: { ...old[id], done: true } }))\n    enqueueToDeletion(id)\n  }\n\n  const handleTaskSelect = (id: string) => {\n    const task = tasks[id]\n    if (!task) {\n      throw new Error('Selected task does not exist')\n    }\n    setSelectedTask(task)\n    setEditing(true)\n  }\n\n  const handleCloseEditForm = () => {\n    setEditing(false)\n  }\n\n  return (\n    <Container className=\"flex justify-content-center col-sm-12 col-lg-10\">\n      {!currentUser && infoRegister &&\n      <Alert dismissible onClose={() => setInfoRegister(false)} variant=\"info\"><Alert.Heading>Attention</Alert.Heading>If\n        you want to save your tasks, please <Link to=\"/signup\"><strong>sign in</strong></Link>.</Alert>}\n      <TaskInput\n        addTodo={addTodo}\n        setError={setError}\n      />\n      {error &&\n      <Alert variant=\"danger\" onClose={() => setError('')} dismissible><Alert.Heading>Error</Alert.Heading>{error}\n      </Alert>}\n      <TodoCards\n        tasks={tasks}\n        onTaskChecked={onTaskDoneHandler}\n        onTaskDeleted={onTaskDeleteHandler}\n        onSelectTask={handleTaskSelect}\n      />\n      {editing && selectedTask &&\n      <TodoEdit selectedTodo={selectedTask} handleTaskUpdate={handleTaskUpdate} onExit={handleCloseEditForm}/>}\n    </Container>\n  )\n}\n\nexport default Todolist\n","import { FormEvent, useRef, useState } from 'react'\nimport { Alert, Button, Card, Container, Form, Spinner } from 'react-bootstrap'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useAuth } from '../../../contexts/authContext'\n\nconst Signup = () => {\n  const emailRef = useRef<HTMLInputElement>(null)\n  const passwordRef = useRef<HTMLInputElement>(null)\n  const passwordConfirmRef = useRef<HTMLInputElement>(null)\n  const { signup, currentUser } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit (e: FormEvent) {\n    e.preventDefault()\n\n    // TODO: change placeholder validation\n\n    if (passwordRef.current?.value !== passwordConfirmRef.current?.value) {\n      return setError('Passwords do not match')\n    }\n\n    try {\n      setError('')\n      setLoading(true)\n      await signup(emailRef.current?.value as string, passwordRef.current?.value as string)\n    } catch (error) {\n      setError(error.message)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center mt-3\">\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Sign up</h2>\n            {loading && (\n              <div className=\"text-center mb-4\">\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              </div>\n            )}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  required\n                  ref={emailRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  required\n                  ref={passwordRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Form.Group id=\"password-confirm\">\n                <Form.Label>Password confirmation</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  required\n                  ref={passwordConfirmRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Sign up\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          Already have an account? <Link to=\"/login\">Log in</Link>\n        </div>\n      </div>\n      {!loading && currentUser && <Redirect to=\"/\"/>}\n    </Container>\n  )\n}\n\nexport default Signup\n","import { FormEvent, useRef, useState } from 'react'\nimport { Alert, Button, Card, Container, Form, Spinner } from 'react-bootstrap'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useAuth } from '../../../contexts/authContext'\n\nconst Login = () => {\n  const emailRef = useRef<HTMLInputElement>(null)\n  const passwordRef = useRef<HTMLInputElement>(null)\n  const { login, currentUser } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit (e: FormEvent) {\n    e.preventDefault()\n\n    try {\n      setError('')\n      setLoading(true)\n      await login(emailRef.current?.value as string, passwordRef.current?.value as string)\n    } catch (error) {\n      setError(error.message)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center mt-3\">\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Log in</h2>\n            {loading && (\n              <div className=\"text-center mb-4\">\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              </div>\n            )}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  required\n                  ref={emailRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  required\n                  ref={passwordRef}\n                  disabled={loading}\n                />\n              </Form.Group>\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Log in\n              </Button>\n            </Form>\n            <div className=\"w-100 text-center mt-3\">\n              <Link to=\"/forgot-password\">Forgot password?</Link>\n            </div>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          Need an account? <Link to=\"/signup\">Sign up</Link>\n        </div>\n      </div>\n      {!loading && currentUser && <Redirect to=\"/\"/>}\n    </Container>\n  )\n}\n\nexport default Login\n","import { FormEvent, useRef, useState } from 'react'\nimport { Alert, Button, Card, Container, Form } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useAuth } from '../../../contexts/authContext'\n\nconst ForgotPassword = () => {\n  const emailRef = useRef<HTMLInputElement>(null)\n  const { resetPassword } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [message, setMessage] = useState('')\n\n  async function handleSubmit (e: FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n\n    try {\n      setMessage('')\n      setError('')\n      setLoading(true)\n      await resetPassword(emailRef.current?.value as string)\n      setMessage('Check your inbox for further instructions')\n    } catch (error) {\n      setError(error.message)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center mt-3\">\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Password reset</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {message && <Alert variant=\"success\">{message}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" required ref={emailRef}/>\n              </Form.Group>\n\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Reset password\n              </Button>\n            </Form>\n            <div className=\"w-100 text-center mt-2\">\n              <Link to=\"/login\">Log in</Link>\n            </div>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          Need an account? <Link to=\"/signup\">Sign up</Link>\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default ForgotPassword\n","import { FormEvent, useState } from 'react'\nimport { useAuth } from '../../../contexts/authContext'\nimport { Redirect } from 'react-router-dom'\nimport { Alert, Button, Card, Container, Form, Spinner } from 'react-bootstrap'\n\nconst Logout = () => {\n  const { logout, currentUser } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault()\n    try {\n      setError('')\n      setLoading(true)\n      await logout()\n    } catch {\n      setError('Failed to log out.')\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center mt-3\">\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Card>\n          <Card.Body>\n            <h3 className=\"text-center mb-4\">Press the button to log out. </h3>\n            {loading && (\n              <div className=\"text-center mb-4\">\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              </div>\n            )}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                Log out\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n      {!loading && !currentUser && <Redirect to=\"/login\"/>}\n    </Container>\n  )\n}\n\nexport default Logout\n","import { Switch, Route } from 'react-router-dom'\nimport Toolbar from '../../components/Toolbar/Toolbar'\nimport TodoList from '../TodoList/Todolist'\nimport Signup from '../Auth/Signup/Signup'\nimport { Container } from 'react-bootstrap'\nimport Login from '../Auth/Login/Login'\nimport ForgotPassword from '../Auth/ForgotPassword/ForgotPassword'\nimport Logout from '../Auth/Logout/Logout'\n\nconst Layout = () => {\n  return (\n    <>\n      <Toolbar/>\n      <Container className=\"d-flex justify-content-center\">\n        <Switch>\n          <Route path=\"/signup\" component={Signup}/>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/logout\" component={Logout}/>\n          <Route path=\"/forgot-password\" component={ForgotPassword}/>\n          <Route path=\"/\" exact component={TodoList}/>\n        </Switch>\n      </Container>\n    </>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport Layout from './containers/Layout/Layout'\nimport { AuthProvider } from './contexts/authContext'\nimport { DbProvider } from './contexts/dbContext'\n\nfunction App () {\n  return (\n    <AuthProvider>\n      <DbProvider>\n        <HashRouter basename='/'>\n          <Layout/>\n        </HashRouter>\n      </DbProvider>\n    </AuthProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}